image: 
  name: registry.gitlab.com/famedly/containers/flutter-dockerimages:stable

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
- coverage
- publish

code_analyze:
  stage: coverage
  dependencies: []
  script:
    - flutter analyze

test:
  stage: coverage
  dependencies: []
  script:
    - flutter test

build_web:
  stage: coverage
  image: registry.gitlab.com/famedly/containers/flutter-dockerimages:beta
  script:
    - sudo apt update
    - sudo apt install curl -y
    - rm -r assets/js/package
    - cd assets/js/ && curl -L 'https://gitlab.com/famedly/libraries/olm/-/jobs/artifacts/master/download?job=build_js' > olm.zip && cd ../../
    - cd assets/js/ && unzip olm.zip && cd ../../
    - cd assets/js/ && rm olm.zip && cd ../../
    - cd assets/js/ && mv javascript package && cd ../../
    - flutter pub get
    - flutter clean
    - flutter build web --release --verbose --dart-define=FLUTTER_WEB_USE_SKIA=true
  artifacts:
    paths:
      - build/web/


build_android_apk:
  stage: coverage
  script:
    - cd android && echo $FDROID_KEY | base64 --decode --ignore-garbage > key.jks && cd ..
    - cd android && echo "storePassword=${FDROID_KEY_PASS}" >> key.properties && cd ..
    - cd android && echo "keyPassword=${FDROID_KEY_PASS}" >> key.properties && cd ..
    - cd android && echo "keyAlias=key" >> key.properties && cd ..
    - cd android && echo "storeFile=../key.jks" >> key.properties && cd ..
    - cd android/app && echo $GOOGLE_SERVICES >> google-services.json && cd ../..
    - flutter build apk --release
  artifacts:
    when: on_success
    paths:
      - build/app/outputs/apk/release/app-release.apk
  only:
    - master


build_android_appbundle:
  stage: coverage
  script:
    - cd android && echo $FDROID_KEY | base64 --decode --ignore-garbage > key.jks && cd ..
    - cd android && echo "storePassword=${FDROID_KEY_PASS}" >> key.properties && cd ..
    - cd android && echo "keyPassword=${FDROID_KEY_PASS}" >> key.properties && cd ..
    - cd android && echo "keyAlias=key" >> key.properties && cd ..
    - cd android && echo "storeFile=../key.jks" >> key.properties && cd ..
    - cd android/app && echo $GOOGLE_SERVICES >> google-services.json && cd ../..
    - flutter build appbundle --target-platform android-arm,android-arm64,android-x64
  artifacts:
    when: on_success
    paths:
      - build/app/outputs/bundle/release/app-release.aab
  only:
    - master

pages:
  stage: publish
  image: ruby:2.3
  script:
    - rm assets -r
    - cp _config.yml ./build/web/
    - cp Gemfile ./build/web/
    - cp Gemfile.lock ./build/web/
    - cd build/web/ && bundle install && cd ../../
    - cd build/web/ && bundle exec jekyll build -d public && cd ../../
    - mv build/web/public ./
  dependencies:
    - build_web
  artifacts:
    paths:
      - public
  only:
    - master
